name: Run AI Chat on Messenger account (manually run)

on:
  workflow_dispatch:
    inputs:
      username:
        description: "Input facebook username (email/phone)"
        required: true
      password:
        description: "Input facebook password"
        required: true
      otp_secret:
        description: "Input App authenticator OTP Secret (optional)"
        required: false
      one_time_code:
        description: "Input one time code to decrypt p2p chat (optional)"
        required: false
      alt_account:
        description: "Input the index of account if the facebook account has multiple accounts, 0 for main account"
        default: "0"
        required: false
      ai_prompt:
        description: "Input the personality prompt (optional)"
        required: false
      gemini_key:
        description: "Input the Gemini API Key (obtain from [https://aistudio.google.com/app/apikey])"
        required: true

jobs:
  run-aichat:
    runs-on: windows-latest
    timeout-minutes: 310

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip' # caching pip dependencies

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login Facebook account
        run: |
          python fb_getcookies_test.py
        env:
          PYTHONUNBUFFERED: "1"
          USE_ENV_SETUP: "true"
          USERNAME: ${{ inputs.username }}
          PASSWORD: ${{ inputs.password }}
          OTP_SECRET: ${{ inputs.otp_secret || '' }}
          ATL_ACC: ${{ inputs.alt_account || '0' }}

      # Run the script
      - name: Run script
        run: |
          python aichat_timeout.py
        env:
          PYTHONUNBUFFERED: "1"
          GENKEY: ${{ inputs.gemini_key }}
          AI_PROMPT: ${{ inputs.ai_prompt || '' }}
          ONETIMECODE: ${{ inputs.one_time_code }}
